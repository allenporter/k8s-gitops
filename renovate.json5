{
  "extends": [
    "config:base",
    "regexManagers:dockerfileVersions",
  ],
  "timezone": "America/Los_Angeles",
  "assignees": ["allenporter"],
  "dependencyDashboardTitle": "Renovate Dashboard",
  "regexManagers": [
    {
      // Every HelmRelease has an annotation that can tell renovate how
      // to find the HelmRepository url and chart version. This regexp
      // tells renovate how to parse it. The annotation itself is added by the
      // renovate-helm-releases github action.
      "fileMatch": [".+\\.yaml$"],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n",
      ],
      "datasourceTemplate": "helm",
    },
    {
      description: "Raw GitHub URL Regex manager",
      "fileMatch": [".+\\.yaml$"],
      matchStrings: [
        "https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*",
      ],
      datasourceTemplate: "github-releases",
      versioningTemplate: "semver",
    },
    {
      "fileMatch": [".+\\.yaml$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s(?:ENV|ARG) .+?_version: (?<currentValue>.+?)\\s"
      ]
    }
  ],
  "helm-values": {
    // Match value files in HelmReleases. This is used so that renovate include
    // these files when evaluating updates to helm charts or even images referenced
    // within the chart.
    "fileMatch": [".*(release|values|components)\\.yaml$"],
  },
  "flux": {
    "fileMatch": [
        "clusters/dev/flux-system/.+\\.yaml$",
        "clusters/prod/flux-system/.+\\.yaml$"
    ]
  },
  "packageRules": [
    // Use different update schedules for dev and prod based on the type of
    // patch. Note that each rule needs its own brach prefix in order to
    // have a working space for evaluating the rules independently.
    {
      "description": "dev: Patches are automatic",
      "matchPaths": ["**/dev/*"],
      "automerge": true,
      "automergeType": "branch",
      "additionalBranchPrefix": "dev-",
      "matchUpdateTypes": ["patch", "digest"],
    },
    {
      "description": "dev: Minor updates automerged",
      "matchPaths": ["**/dev/*"],
      "automerge": true,
      "additionalBranchPrefix": "dev-minor",
      "matchUpdateTypes": ["minor"],
    },
    {
      "description": "dev: Major packages updated weekly",
      "matchPaths": ["**/dev/**"],
      "extends": ["schedule:weekends"],
      "additionalBranchPrefix": "dev-major",
      "matchUpdateTypes": ["major"],
    },
    {
      "description": "prod: Patches are automatic after 1 day",
      "matchPaths": ["**/prod/**"],
      "automerge": true,
      "automergeType": "branch",
      "stabilityDays": 1,
      "additionalBranchPrefix": "prod-patch",
      "matchUpdateTypes": ["patch"],
    },
    {
      "description": "prod: Minor updates automerged weekly",
      "matchPaths": ["**/prod/**"],
      "automerge": true,
      "extends": ["schedule:weekends"],
      "additionalBranchPrefix": "prod-minor",
      "stabilityDays": 1,
      "matchUpdateTypes": ["minor"],
    },
    {
      "description": "prod: Packages updated weekly",
      "matchPaths": ["**/prod/**"],
      "extends": ["schedule:weekends"],
      "additionalBranchPrefix": "prod-",
      "stabilityDays": 1,
      "matchUpdateTypes": ["major", "minor"],
    },
    {
      "description": "Package requirements: minor updates are silent",
      "matchFiles": ["requirements.txt"],
      "automerge": true,
      "automergeType": "branch",
      "matchUpdateTypes": ["minor", "patch"],
    },
    {
      "description": "Package requirements: updated weekly",
      "matchFiles": ["requirements.txt"],
      "extends": ["schedule:weekends"],
      "automerge": true,
      "stabilityDays": 1,
      "matchUpdateTypes": ["major"],
    },
  ],
  "pre-commit": {
    "enabled": true
  },
}
