---
- name: Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
    suffix: build
  register: tempdirs
  delegate_to: localhost

- set_fact:
    temp_dir: "{{ tempdirs.path }}/{{ inventory_hostname }}"
    build_file: "{{ output_dir }}{{ inventory_hostname }}-cloud-config.yaml"

- name: Create output directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  delegate_to: localhost
  with_items:
  - "{{ temp_dir }}"
  - "{{ output_dir }}"

- name: k3s_token
  shell:
    cmd: "sops -d {{ k3s_token_file }} | yq -r .k3s_token"
  register: k3s_token_output
  run_once: true
  delegate_to: localhost

- name: "Template cloud-config.yaml"
  vars:
    k3s_token: "{{ k3s_token_output.stdout }}"
  template:
    src: "{{ item.name }}.tmpl"
    dest: "{{ temp_dir }}/{{ item.name }}"
  with_items:
  - name: install.yaml
  - name: k3s_kapi_primary.yaml
    requires: kapi_primary
  - name: k3s_kapi_secondary.yaml
    requires: kapi_secondary
  - name: k3s_kube_worker.yaml
    requires: kube_worker
  when: item.requires is not defined or cloud_configs|select("equalto", item.requires)
  delegate_to: localhost

- name: "Build combined cloud-config.yaml"
  shell:
    cmd: "cat {{ temp_dir }}/*.yaml > {{ build_file }}"
  delegate_to: localhost

- name: "Validate cloud-config.yaml"
  shell:
    cmd: "kairosctl validate {{ build_file }}"
  delegate_to: localhost

- name: "Copy cloud-config to kairos machine"
  ansible.builtin.copy:
    src: "{{ build_file }}"
    dest: "/home/{{ ansible_user }}/"
