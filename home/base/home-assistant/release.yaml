---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home-assistant
spec:
  releaseName: home-assistant
  chart:
    spec:
      chart: home-assistant
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  interval: 5m
  install:
    remediation:
      retries: 3
  test:
    # Fix problem where helm fails to uninstall
    enable: false
  # Default values
  # https://github.com/k8s-at-home/charts/blob/master/charts/stable/home-assistant/values.yaml
  values:
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: haproxy-external
          cert-manager.io/cluster-issuer: letsencrypt
    hostNetwork: true
    persistence:
      config:
        enabled: true
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 5Gi
    additionalVolumes:
      - name: ssh-creds
        secret:
          secretName: git-creds
          defaultMode: 0400
          optional: true
      - name: nfs-music
        nfs:
          server: sto01.prod.mrv.thebends.org
          path: /volume1/music
    additionalVolumeMounts:
      - name: nfs-music
        mountPath: /mnt/music
    addons:
      codeserver:
        enabled: true
        volumeMounts:
          - name: config
            mountPath: /config
          - name: ssh-creds
            mountPath: /root/.ssh/
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: haproxy
            cert-manager.io/cluster-issuer: letsencrypt
    postgresql:
      enabled: true
      postgresqlUsername: home-assistant
      postgresqlDatabase: home-assistant
      persistence:
        enabled: true
        existingClaim: data-home-assistant-postgresql-0
    prometheus:
      serviceMonitor:
        enabled: true
        # Set the token with:
        #  kubectl create secret generic prometheus-bearer-token -n home-assistant --from-literal="token=MY-SECRET"
        bearerTokenSecret:
          name: prometheus-bearer-token
          key: token
  valuesFrom:
    # Set a password with a command like:
    #     kubectl create secret generic postgresql-password -n home-assistant --from-literal="data=MY-SECRET"
    - kind: Secret
      name: postgresql-password
      valuesKey: data
      targetPath: postgresql.postgresqlPassword
