---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  releaseName: kube-prometheus-stack
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  interval: 5m
  # Increase default to deal with extra time needed since adding persistence
  timeout: 10m
  install:
    remediation:
      retries: 5
  test:
    enable: false
  # Default values
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    grafana:
      enabled: true
      ingress:
        enabled: true
        ingressClassName: nginx-internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - g.${name_service_dns_domain}
        pathType: Prefix
        tls:
          - secretName: g-tls
            hosts:
              - g.${name_service_dns_domain}
      persistence:
        enabled: false
      sidecar:
        dashboards:
          enabled: true
          label: grafana_dashboard
          searchNamespace: ALL
        datasources:
          enabled: true
          label: grafana_datasource
          searchNamespace: ALL
      env:
        GF_EXPLORE_ENABLED: true
      admin:
        existingSecret: "grafana"
    coreDns:
      enabled: true
    kubeDns:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeEtcd:
      enabled: true
      service:
        enabled: true
        port: 2379
        targetPort: 2379
    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - source_labels: [__name__]
            regex: "apiserver_request_sli_duration_seconds_bucket" # 14k
            action: drop
          - source_labels: [__name__]
            regex: "apiserver_request_duration_seconds_bucket" # 10k
            action: drop
          - source_labels: [__name__]
            regex: "apiserver_response_sizes_bucket" # 3k
            action: drop
          - source_labels: [__name__]
            regex: "etcd_request_duration_seconds_bucket" # 12k
            action: drop
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx-internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - p.${name_service_dns_domain}
        pathType: Prefix
        tls:
          - secretName: p-tls
            hosts:
              - p.${name_service_dns_domain}
      prometheusSpec:
        enableAdminAPI: true
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        deploymentStrategy:
          type: Recreate
        resources:
          requests:
            memory: 400Mi
          limit:
            memory: 600Mi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "local-hostpath"
              resources:
                requests:
                  storage: 20Gi
    alertmanager:
      ingress:
        enabled: true
        ingressClassName: nginx-internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - a.${name_service_dns_domain}
        pathType: Prefix
        tls:
          - secretName: a-tls
            hosts:
              - a.${name_service_dns_domain}
      alertmanagerSpec:
        # TODO: Re-create when cluster block storage is completely setup #1647
        # storage:
        #   volumeClaimTemplate:
        #     spec:
        #       storageClassName: "rook-ceph-block"
        #       resources:
        #         requests:
        #           storage: 5Gi
      config:
        global:
          resolve_timeout: 5m
        route:
          # Avoid over grouping to ensure that alerts are delivered separately to fit under the discord limit
          group_by: ['job', 'alertname', 'severity', 'name', 'job_name', 'instance']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'discord'
          routes:
            - match:
                severity: warning
              continue: true
              receiver: discord
            - match:
                alertname: Watchdog
              receiver: 'null'
            - match:
                alertname: InfoInhibitor
              receiver: 'null'
        receivers:
          - name: 'null'
          - name: 'discord'
            discord_configs:
              - send_resolved: true
                title: |-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}
                message: >-
                  {{ range .Alerts -}}
                    *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
                    {{ if ne .Annotations.summary ""}}*Summary:* {{ .Annotations.summary }} {{ else if ne .Annotations.message ""}}*Message:* {{ .Annotations.message }} {{ else if ne .Annotations.description ""}}*Description:* {{ .Annotations.description }}{{ end }}
                    *Details:*
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}
        templates:
          - '/etc/alertmanager/config/*.tmpl'
  valuesFrom:
    - kind: Secret
      name: discord-alert-url
      valuesKey: address
      targetPath: alertmanager.receivers[1].discord_configs[0].webhook_url
      optional: false
